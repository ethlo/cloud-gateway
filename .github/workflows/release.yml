name: Create and Publish Release

on:
  workflow_dispatch:

  push:
    tags:
      - 'v*.*.*'
    branches:
      - 'main'

env:
  IMAGE_NAME: ethlocom/cloud-gateway

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - arch: amd64
            platform: linux/amd64
          - arch: arm64
            platform: linux/arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set Version and Tag
        id: set_vars
        run: |
          if [[ "${{ github.ref_type }}" == "tag" ]]; then
            VERSION=${{ github.ref_name }}
            VERSION=${VERSION#v}
            DOCKER_TAG=${{ github.ref_name }}
          else
            VERSION="latest-SNAPSHOT"
            DOCKER_TAG="latest-SNAPSHOT"
          fi
          
          echo "MAVEN_VERSION=${VERSION}" >> $GITHUB_ENV
          echo "DOCKER_ARCH_TAG=${{ env.IMAGE_NAME }}:${DOCKER_TAG}-${{ matrix.arch }}" >> $GITHUB_ENV

      - name: Set Project Version
        run: mvn versions:set -DnewVersion=${{ env.MAVEN_VERSION }} -DskipTests

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Image and Push Manually
        run: |
          # Step 1: Build all modules
          mvn -B clean install -DskipTests
          
          # Step 2: Change into the correct directory
          cd cloud-gateway-server
          
          # Step 3: Build the image locally using the correct, specific tag
          mvn spring-boot:build-image -DskipTests \
            -Dspring-boot.build-image.tags=${{ env.DOCKER_ARCH_TAG }} \
            -Dspring-boot.build-image.imagePlatform=${{ matrix.platform }}
          
          # Step 4: Push the exact same tag that was just built
          docker push ${{ env.DOCKER_ARCH_TAG }}

  merge-manifests:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create and Push Multi-Arch Manifest
        run: |
          echo "Waiting for 30 seconds for images to become available..."
          sleep 30

          if [[ "${{ github.ref_type }}" == "tag" ]]; then
            FINAL_TAG="${{ github.ref_name }}"
          else
            FINAL_TAG="latest-SNAPSHOT"
          fi
          
          AMD64_TAG="${{ env.IMAGE_NAME }}:${FINAL_TAG}-amd64"
          ARM64_TAG="${{ env.IMAGE_NAME }}:${FINAL_TAG}-arm64"
          
          docker manifest create ${{ env.IMAGE_NAME }}:${FINAL_TAG} \
            --amend ${AMD64_TAG} \
            --amend ${ARM64_TAG}
          
          docker manifest push ${{ env.IMAGE_NAME }}:${FINAL_TAG}

      - name: (Optional) Tag release as 'latest'
        if: github.ref_type == 'tag'
        run: |
          FINAL_TAG="${{ github.ref_name }}"
          AMD64_TAG="${{ env.IMAGE_NAME }}:${FINAL_TAG}-amd64"
          ARM64_TAG="${{ env.IMAGE_NAME }}:${FINAL_TAG}-arm64"
          
          docker manifest create ${{ env.IMAGE_NAME }}:latest \
            --amend ${AMD64_TAG} \
            --amend ${ARM64_TAG}
          docker manifest push ${{ env.IMAGE_NAME }}:latest