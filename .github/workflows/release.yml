name: Create and Publish Release

on:
  workflow_dispatch:

  push:
    tags:
      - 'v*.*.*'
    branches:
      - 'main'

env:
  IMAGE_NAME: ethlocom/cloud-gateway

jobs:
  build:
    strategy:
      matrix:
        include:
          - arch: amd64
            runs_on: ubuntu-latest
          - arch: arm64
            runs_on: ubuntu-24.04-arm  # Free ARM64 runner for public repos
    runs-on: ${{ matrix.runs_on }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      - name: Set Version and Tag
        id: set_vars
        run: |
          if [[ "${{ github.ref_type }}" == "tag" ]]; then
            VERSION=${{ github.ref_name }}
            VERSION=${VERSION#v}
            DOCKER_TAG=${VERSION}
          else
            VERSION="latest-SNAPSHOT"
            DOCKER_TAG="latest-SNAPSHOT"
          fi
          echo "MAVEN_VERSION=${VERSION}" >> $GITHUB_ENV
          echo "DOCKER_ARCH_TAG=${DOCKER_TAG}-${{ matrix.arch }}" >> $GITHUB_ENV

      - name: Set Project Version
        run: mvn -f cloud-gateway-server/pom.xml versions:set -DnewVersion=${{ env.MAVEN_VERSION }} -DskipTests

      - name: Build Spring Boot Docker Image Locally
        run: |
          mvn -f cloud-gateway-server/pom.xml -B clean package -DskipTests
          mvn -f cloud-gateway-server/pom.xml spring-boot:build-image \
            -DskipTests \
            -Dimage.tag=${DOCKER_ARCH_TAG}

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker Image
        run: |
          docker push ${{ env.IMAGE_NAME }}:${{ env.DOCKER_ARCH_TAG }}

  merge-manifests:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create and Push Multi-Arch Manifest
        run: |
          echo "Waiting 30 seconds for images to become available..."
          sleep 30

          if [[ "${{ github.ref_type }}" == "tag" ]]; then
            FINAL_TAG="${{ github.ref_name }}"
            FINAL_TAG="${FINAL_TAG#v}"
          else
            FINAL_TAG="latest-SNAPSHOT"
          fi

          AMD64_TAG="${{ env.IMAGE_NAME }}:${FINAL_TAG}-amd64"
          ARM64_TAG="${{ env.IMAGE_NAME }}:${FINAL_TAG}-arm64"

          docker manifest create ${{ env.IMAGE_NAME }}:${FINAL_TAG} \
            --amend ${AMD64_TAG} \
            --amend ${ARM64_TAG}

          docker manifest push ${{ env.IMAGE_NAME }}:${FINAL_TAG}

      - name: (Optional) Tag release as 'latest'
        if: github.ref_type == 'tag'
        run: |
          FINAL_TAG="${{ github.ref_name }}"
          FINAL_TAG="${FINAL_TAG#v}"

          AMD64_TAG="${{ env.IMAGE_NAME }}:${FINAL_TAG}-amd64"
          ARM64_TAG="${{ env.IMAGE_NAME }}:${FINAL_TAG}-arm64"

          docker manifest create ${{ env.IMAGE_NAME }}:latest \
            --amend ${AMD64_TAG} \
            --amend ${ARM64_TAG}
          docker manifest push ${{ env.IMAGE_NAME }}:latest
