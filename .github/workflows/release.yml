name: Create and Publish Release

on:
  workflow_dispatch: # Allows manual triggering from the Actions tab

  push:
    tags:
      - 'v*.*.*' # Triggers on tags like v1.0.0 for releases
    branches:
      - 'main'   # Triggers on pushes to main for snapshots

env:
  # Base name for your Docker image
  IMAGE_NAME: ethlocom/cloud-gateway

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - arch: amd64
            platform: linux/amd64
          - arch: arm64
            platform: linux/arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set Version and Tag
        id: set_vars
        run: |
          if [[ "${{ github.ref_type }}" == "tag" ]]; then
            # For a tag like v1.2.3, strip the 'v' for the Maven version
            VERSION=${{ github.ref_name }}
            VERSION=${VERSION#v}
            # The Docker tag keeps the 'v'
            DOCKER_TAG=${{ github.ref_name }}
          else
            # For main branch, use latest-SNAPSHOT
            VERSION="latest-SNAPSHOT"
            DOCKER_TAG="latest-SNAPSHOT"
          fi
          
          echo "MAVEN_VERSION=${VERSION}" >> $GITHUB_ENV
          echo "DOCKER_IMAGE_TAG=${{ env.IMAGE_NAME }}:${DOCKER_TAG}-${{ matrix.arch }}" >> $GITHUB_ENV

      - name: Set Project Version
        run: mvn versions:set -DnewVersion=${{ env.MAVEN_VERSION }} -DskipTests

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        run: |
          mvn -B clean install -DskipTests
          cd cloud-gateway-server
          mvn spring-boot:build-image -DskipTests \
            -Dspring-boot.build-image.imageName=${{ env.DOCKER_IMAGE_TAG }} \
            -Dspring-boot.build-image.imagePlatform=${{ matrix.platform }}

  merge-manifests:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create and Push Multi-Arch Manifest
        run: |
          if [[ "${{ github.ref_type }}" == "tag" ]]; then
            FINAL_TAG="${{ github.ref_name }}"
          else
            FINAL_TAG="latest-SNAPSHOT"
          fi
          
          AMD64_TAG="${{ env.IMAGE_NAME }}:${FINAL_TAG}-amd64"
          ARM64_TAG="${{ env.IMAGE_NAME }}:${FINAL_TAG}-arm64"
          
          echo "Creating manifest for ${{ env.IMAGE_NAME }}:${FINAL_TAG}"
          echo "--> Using AMD64 image: ${AMD64_TAG}"
          echo "--> Using ARM64 image: ${ARM64_TAG}"

          docker manifest create ${{ env.IMAGE_NAME }}:${FINAL_TAG} \
            --amend ${AMD64_TAG} \
            --amend ${ARM64_TAG}
          
          docker manifest push ${{ env.IMAGE_NAME }}:${FINAL_TAG}

      - name: (Optional) Tag release as 'latest'
        if: github.ref_type == 'tag'
        run: |
          FINAL_TAG="${{ github.ref_name }}"
          AMD64_TAG="${{ env.IMAGE_NAME }}:${FINAL_TAG}-amd64"
          ARM64_TAG="${{ env.IMAGE_NAME }}:${FINAL_TAG}-arm64"
          
          docker manifest create ${{ env.IMAGE_NAME }}:latest \
            --amend ${AMD64_TAG} \
            --amend ${ARM64_TAG}
          docker manifest push ${{ env.IMAGE_NAME }}:latest