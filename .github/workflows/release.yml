name: Create and Publish Release

on:
  workflow_dispatch: # Allows manual triggering from the Actions tab

  push:
    tags:
      - 'v*.*.*' # Triggers on tags like v1.0.0 for releases
    branches:
      - 'main'   # Triggers on pushes to main for snapshots

env:
  # Base name for your Docker image
  IMAGE_NAME: ethlocom/cloud-gateway

jobs:
  build:
    # This job now runs on the standard x86 runner for both architectures
    runs-on: ubuntu-latest

    strategy:
      # Use a matrix to build both architectures
      matrix:
        include:
          - arch: amd64
            platform: linux/amd64
          - arch: arm64
            platform: linux/arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      # This step enables ARM emulation on the x86 runner
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set dynamic image tag
        id: set_vars
        run: |
          if [[ "${{ github.ref_type }}" == "tag" ]]; then
            # For a git tag like v1.2.3, the tag is "v1.2.3-amd64" or "v1.2.3-arm64"
            echo "image_tag=${{ env.IMAGE_NAME }}:${{ github.ref_name }}-${{ matrix.arch }}" >> $GITHUB_ENV
          else
            # For a push to main, the tag is "latest-SNAPSHOT-amd64" or "latest-SNAPSHOT-arm64"
            echo "image_tag=${{ env.IMAGE_NAME }}:latest-SNAPSHOT-${{ matrix.arch }}" >> $GITHUB_ENV
          fi

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        run: |
          # First, build and install all modules from the project root
          mvn -B clean install
          
          # Then, change into the specific module's directory
          cd cloud-gateway-server
          
          # Finally, build the image from within the submodule
          mvn spring-boot:build-image \
            -Dspring-boot.build-image.imageName=${{ env.image_tag }} \
            -Dspring-boot.build-image.imagePlatform=${{ matrix.platform }}

  merge-manifests:
    # This job runs only after both build jobs have succeeded
    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create and Push Multi-Arch Manifest
        run: |
          # Determine the base tag (e.g., "v1.2.3" or "latest-SNAPSHOT")
          if [[ "${{ github.ref_type }}" == "tag" ]]; then
            FINAL_TAG="${{ github.ref_name }}"
          else
            FINAL_TAG="latest-SNAPSHOT"
          fi
          
          # Reconstruct the architecture-specific tags
          AMD64_TAG="${{ env.IMAGE_NAME }}:${FINAL_TAG}-amd64"
          ARM64_TAG="${{ env.IMAGE_NAME }}:${FINAL_TAG}-arm64"
          
          # Create the final multi-arch image
          docker manifest create ${{ env.IMAGE_NAME }}:${FINAL_TAG} \
            --amend ${AMD64_TAG} \
            --amend ${ARM64_TAG}
          
          # Push the final manifest to the registry
          docker manifest push ${{ env.IMAGE_NAME }}:${FINAL_TAG}

      - name: (Optional) Tag release as 'latest'
        # This step runs only for official releases (git tags), not for snapshots
        if: github.ref_type == 'tag'
        run: |
          FINAL_TAG="${{ github.ref_name }}"
          AMD64_TAG="${{ env.IMAGE_NAME }}:${FINAL_TAG}-amd64"
          ARM64_TAG="${{ env.IMAGE_NAME }}:${FINAL_TAG}-arm64"
          
          # Create and push a 'latest' tag pointing to the same multi-arch images
          docker manifest create ${{ env.IMAGE_NAME }}:latest \
            --amend ${AMD64_TAG} \
            --amend ${ARM64_TAG}
          docker manifest push ${{ env.IMAGE_NAME }}:latest