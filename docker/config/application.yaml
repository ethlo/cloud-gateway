server:
  port: 8888

http-logging:
  auth:
    jwt:
      enabled: true
      user-claim: preferred_username
      realm-claim-name: iss
      realm-expression: ([^/]+)/?$
    basic:
      enabled: true
      realm-header-name: x-realm
  capture:
    enabled: true
    log-directory: /tmp/cloud-gateway/raw
  providers:
    clickhouse:
      enabled: true
      url: jdbc:clickhouse://localhost:8123?database=default&async_insert=1&wait_for_async_insert=1
    file:
      enabled: true
      pattern: '{{gateway_request_id}} {{realm_claim}} {{user_claim}} {{method}} {{path}} {{host}} {{request_headers["Content-Length"][0]}} {{status}} {{user_agent}} {{duration | numberformat("#.###") }}'
  matchers:
    - id: All
      predicates:
        - Path=/**
      request:
        raw: STORE
        body: STORE
      response:
        body: STORE
        raw: STORE
logging:
  level:
    com.ethlo.http: INFO
    org.springframework.cloud.gateway: INFO
management:
  endpoints:
    web:
      exposure:
        include: health,metrics,status
  endpoint:
    env:
      show-values: when_authorized
spring:
  cloud:
    gateway:
      filter:
        request-rate-limiter:
          enabled: true
          deny-empty-key: false
          empty-key-status-code: 403
      metrics:
        tags:
          path:
            enabled: true
        enabled: true
      routes:
        - id: dynamic-hosts
          uri: http://default
          predicates:
            - Path=/hosts/**
          filters:
            - PathHost=1
        - id: http-bin-delay
          uri: https://httpbin.org/delay
          predicates:
            - Path=/delay/**
        - id: http-bin-get
          uri: https://httpbin.org/get
          predicates:
            - Path=/get
          filters:
            - name: InjectBasicAuth
              args:
                username: foo
                password: bar
            - SetRequestHeader=x-realm,baz
        - id: http-bin-anything
          uri: https://httpbin.org/anything
          predicates:
            - Path=/anything
          filters:
            - name: RequestRateLimiter
              args:
                local-rate-limiter:
                  replenish-rate: 2
                  refresh-period: 10
        - id: http-upstream-missing
          uri: http://192.0.0.255
          predicates:
            - Path=/504
          filters:
            - name: CircuitBreaker
              args:
                name: upstream-down
                fallbackUri: 'forward:/upstream-down'
  web:
    resources:
      static-locations:
        - file:/static
  webflux:
    problemdetails:
      enabled: true

# Link to other services' own routes configuration
#upstream:
#  interval: PT10S
#  services:
#    - name: my-service
#      config-url: http://localhost:8000/config.yaml

# These are workarounds for issues
#workarounds:
#  avoid-double-encoded-url: true